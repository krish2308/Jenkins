pipeline {
  parameters {
    choice(name: 'SERVER_NAME', choices: ['server1.example.com', 'server2.example.com', 'server3.example.com'], description: 'Name of the server to deploy to')
  }
  
  agent any
  
  environment {
    // Define the Git repository URL and branch
    GIT_REPO_URL = "https://github.com/your-git-repo.git"
    GIT_BRANCH = "master"
    
    // Define the script you want to run
    SCRIPT = "script.sh"
  }
  
  stages {
    stage('Clone Git repository') {
      steps {
        // Clone the Git repository on the Jenkins master
        git branch: "${env.GIT_BRANCH}", url: "${env.GIT_REPO_URL}"
      }
    }
    
    stage('Deploy to server') {
      when {
        expression { params.SERVER_NAME != '' }
      }
      
      steps {
        // Use SSH to copy the Git repository to the selected server
        sshagent (credentials: ['my-ssh-key']) {
          sh "ssh ${params.SERVER_NAME} 'rm -rf /path/to/clone/${env.GIT_BRANCH} && mkdir -p /path/to/clone/${env.GIT_BRANCH}'"
          sh "scp -r ${env.WORKSPACE}/. ${params.SERVER_NAME}:/path/to/clone/${env.GIT_BRANCH}/"
        }
              
        // Run the script on the selected server
        sshagent (credentials: ['my-ssh-key']) {
          sh "ssh ${params.SERVER_NAME} 'cd /path/to/clone/${env.GIT_BRANCH} && sh ${env.SCRIPT}'"
        }
      }
    }
  }
}
